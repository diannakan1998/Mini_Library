import clamp from 'clamp'

// Returns element closest to target in arr[]
function closest(arr, target) {
  const n = arr.length - 1

  if (target <= arr[0]) return arr[0]
  if (target >= arr[n - 1]) return arr[n - 1]

  // Doing binary search
  let i = 0
  let j = n
  let mid = 0

  while (i < j) {
    mid = (i + j) / 2

    if (arr[mid] === target) return arr[mid]

    /* If target is less than array element,
			then search in left */
    if (target < arr[mid]) {
      // If target is greater than previous
      // to mid, return closest of two
      if (mid > 0 && target > arr[mid - 1])
        return clamp(arr[mid - 1], arr[mid], target)

      /* Repeat for left half */
      j = mid
    }

    // If target is greater than mid
    else {
      if (mid < n - 1 && target < arr[mid + 1])
        return clamp(arr[mid], arr[mid + 1], target)
      // update i
      i = mid + 1
    }
  }

  // Only single element left after search
  return arr[mid]
}

export default closest
